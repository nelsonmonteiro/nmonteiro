upstream nmonteiro-app {
	server unix:/var/run/nmonteiro.sock fail_timeout=0;
}

server {
    listen 80;
    server_name nelsonmonteiro.eu;
    return 301 https://nelsonmonteiro.eu$request_uri;
}

server {
	listen 443;
	access_log /var/log/nginx/nmonteiro.access.log;
	error_log /var/log/nginx/nmonteiro.error.log;
	server_name nelsonmonteiro.eu;

	root /home/ubuntu/sites/nmonteiro/server/nmonteiro/;
	keepalive_timeout 5;

	client_max_body_size 20M;

	location /static/ {
		expires 30d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";

		# if asset versioning is used
		if ($query_string) {
			expires max;
		}
	}

	location /media/ {
		expires 30d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}

	location / {
		proxy_pass_header Server;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_redirect off;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_connect_timeout 60s;
		proxy_read_timeout 120s;
		proxy_pass http://nmonteiro-app;
		add_header DOCUMENT_URI $document_uri;
		add_header HOSTNAME $hostname;
		add_header REMOTE_ADDR $remote_addr;
		add_header REQUEST_URI $request_uri;
		add_header SERVER_ADDR $server_addr;
		add_header SERVER_NAME $server_name;
		add_header URI $uri;
	}

	# what to serve if upstream is not available or crashes
	error_page 500 502 503 504 /static/50x.html;
}
